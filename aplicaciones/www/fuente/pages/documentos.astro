---
import type { Pagina, Documento } from '@/tipos';
import TituloPagina from '@/componentes/TituloPagina.astro';
import { esquemaPagina, gql, pedirDatos } from '../utilidades/ayudas';
import Plantilla from '@/plantillas/Plantilla.astro';

const PeticionPagina = gql`
  query {
    ${esquemaPagina('documentos')}
  }
`;

const { pagina } = await pedirDatos<{ page: Pagina }>(PeticionPagina).then(async (respuesta) => ({
  pagina: respuesta.page,
}));

const PeticionDocumentos = gql`
  query Documentos {
    documentos(first: 100) {
      nodes {
        id
        slug
        title
        descripcion
        fecha
        autores
        fuente(format: RAW)
        identificador
        archivos {
          nodes {
            filePath
          }
        }
        tiposDeDocumentos {
          nodes {
            slug
            name
          }
        }
        featuredImage {
          node {
            filePath
          }
        }
        categories {
          nodes {
            slug
            name
            count
            children {
              nodes {
                slug
                name
                count
              }
            }
          }
        }
      }
    }
  }
`;

const { documentos } = await pedirDatos<{ documentos: { nodes: Documento[] } }>(PeticionDocumentos);
const documentosArray = documentos?.nodes || [];
---

<Plantilla titulo={pagina.title} descripcion={pagina.descripcion}>
  <main class="documentos">
    <TituloPagina titulo={pagina.title} slug={pagina.slug} />

    <div class="contenedorDocumentos">
      {
        documentosArray.map((documento) => (
          <article class="documento">
            <h2>{documento.title}</h2>
            <div class="metadatos">
              {documento.fecha && (
                <p class="fecha">
                  <span class="subtitulo"> Fecha:</span> <span class="metadato">{documento.fecha}</span>
                </p>
              )}
              {documento.autores && (
                <p class="autores">
                  <span class="subtitulo">Autores:</span> <span class="metadato">{documento.autores}</span>
                </p>
              )}
              {documento.fuente && (
                <p class="fuente">
                  <span class="subtitulo">Fuente:</span> <span class="metadato">{documento.fuente} </span>
                </p>
              )}
              {documento.identificador && (
                <p class="identificador">
                  <span class="subtitulo">Identificador:</span> <span class="metadato">{documento.identificador}</span>
                </p>
              )}

              {documento.tiposDeDocumentos && documento.tiposDeDocumentos.nodes && (
                <p class="tipos">
                  <span class="subtitulo">Tipo de documento:</span>

                  {documento.tiposDeDocumentos.nodes.map((tipo) => (
                    <span class="metadato">{tipo.name}</span>
                  ))}
                </p>
              )}

              {documento.categories && documento.categories.nodes && documento.categories.nodes.length > 0 && (
                <p class="categorias">
                  <span class="subtitulo">Categor√≠as:</span>
                  <div class="contenedorCategorias">
                    {documento.categories.nodes.map((categoria) => (
                      <div class="categoriaGrupo">
                        <span class="categoria metadato">
                          <a href={`${import.meta.env.BASE_URL}/categorias/${categoria.slug}`}>{categoria.name}</a>
                        </span>

                        {categoria.children && categoria.children.nodes && categoria.children.nodes.length > 0 && (
                          <div class="hijos">
                            {categoria.children.nodes.map((hijo, index) => (
                              <span class="hijo">
                                <a href={`${import.meta.env.BASE_URL}/categorias/${hijo.slug}`}>
                                  {hijo.name}
                                  {index < categoria.children.nodes.length - 1 ? ',' : ''}
                                </a>
                              </span>
                            ))}
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                </p>
              )}
            </div>

            <div class="descripcion" set:html={documento.descripcion} />

            {documento.featuredImage && documento.featuredImage.node && documento.featuredImage.node.filePath && (
              <div class="imagenDestacada">
                {documento.archivos && documento.archivos.nodes && documento.archivos.nodes.length > 0 ? (
                  <a
                    href={`https://wordpress.enflujo.com${documento.archivos.nodes[0].filePath}`}
                    title="Ver documento"
                  >
                    <img
                      src={`https://wordpress.enflujo.com${documento.featuredImage.node.filePath}`}
                      alt={`Imagen para ${documento.title}`}
                    />
                  </a>
                ) : (
                  <img
                    src={`https://wordpress.enflujo.com${documento.featuredImage.node.filePath}`}
                    alt={`Imagen para ${documento.title}`}
                  />
                )}
              </div>
            )}

            {documento.archivos && documento.archivos.nodes && documento.archivos.nodes.length > 0 && (
              <div class="archivos">
                <h3 class="subtitulo">Archivos</h3>
                <ul>
                  {documento.archivos.nodes.map((archivo) => (
                    <li>
                      <a href={`https://wordpress.enflujo.com${archivo.filePath}`}>
                        {archivo.filePath.split('/').pop() || 'Descargar archivo'}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </article>
        ))
      }
    </div>
  </main>
</Plantilla>

<style>
  .contenedorDocumentos {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
    gap: 2rem;
    padding: 2rem;
  }

  .documento {
    padding: 1.5rem;
    background-color: var(--superficieClaro);
    border: 2px solid var(--bordePrimario);
    transition: transform 0.2s ease-in-out;
  }

  .documento h2 {
    margin-top: 0;
    color: var(--colorTexto);
    font-family: var(--fuenteTitulos);
  }

  .metadatos {
    font-size: 0.9rem;
    color: var(--colorTexto);
    opacity: 0.8;
    margin-bottom: 1rem;
  }

  .metadatos p {
    margin: 0.3rem 0;
  }

  .archivos {
    margin-top: 1.5rem;
  }

  .archivos ul {
    list-style: none;
    padding-left: 0;
  }

  .archivos li {
    margin-bottom: 0.5rem;
  }

  .archivos a {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: var(--cobalto);
    color: white;
    border-radius: 4px;
    text-decoration: none;
    max-width: 100%;
    word-wrap: break-word;
  }

  .archivos a:hover {
    background-color: var(--rojo);
  }

  .subtitulo {
    display: block;
  }

  .categoria {
    font-weight: 600;
  }

  .imagenDestacada {
    margin: 1.5rem 0;
    padding: 4px;
    overflow: hidden;
  }

  .imagenDestacada img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
  }
</style>
