---
import FiltrosHistoriaOral from '@/componentes/FiltrosHistoriaOral.astro';
import TituloPagina from '@/componentes/TituloPagina.astro';
import Plantilla from '@/plantillas/Plantilla.astro';
import type { CategoriasWP } from '@/tipos';
import { convertirTextoAHTML, gql, pedirDatos } from '@/utilidades/ayudas';

const categoria = 'Categor√≠a';
export async function getStaticPaths() {
  const PeticionCategorias = gql`
    query {
      categories(where: { hideEmpty: true }, first: 200) {
        nodes {
          name
          slug
        }
      }
    }
  `;
  const { categories } = await pedirDatos<{ categories: CategoriasWP }>(PeticionCategorias);

  return categories.nodes.map(({ slug }) => {
    return { params: { slug } };
  });
}

const { slug } = Astro.params;

const Categoria = gql`
  query {
    category(id: "${slug}", idType: SLUG) {
      name
    }
  }
`;

const { category } = await pedirDatos<{ category: { name: string } }>(Categoria);

const PeticionTranscripcionesCategoria = gql`
  query {
  transcripciones(where: {categoryName: "${slug}"}) {
    nodes {
      transcripcion(format: RAW)
      categories {
        nodes {
          name
          slug
          count
          children {
            nodes {
              count
              slug
              name
            }
          }
        }
      }
      audios {
        edges {
          node {
            id
          }
        }
      }
      entrevista {
        node {
          personajes {
            nodes {
              title
              slug
            }
          }
        }
      }
    }
  }
}
`;
console.log(PeticionTranscripcionesCategoria);
const { transcripciones } = await pedirDatos<{ transcripciones: { nodes: any[] } }>(PeticionTranscripcionesCategoria);
const transcripcionesProcesadas = transcripciones.nodes.map((transcripcion) => {
  const { transcripcion: textoTranscripcion } = transcripcion;
  const proceso = convertirTextoAHTML(textoTranscripcion);
  return {
    texto: proceso.texto,
    personajes: transcripcion.entrevista.node.personajes.nodes,
    categorias: transcripcion.categories.nodes.map((categoria: any) => {
      return {
        nombre: categoria.name,
        slug: categoria.slug,
        conteo: categoria.count,
        subcategorias: categoria.children.nodes.map((subcategoria: any) => {
          return {
            nombre: subcategoria.name,
            slug: subcategoria.slug,
            conteo: subcategoria.count,
          };
        }),
      };
    }),
  };
});
---

<Plantilla titulo={category.name} descripcion={categoria}>
  <div class="paginaConMenuIzquierdo">
    <aside class="menuIzquierdo">
      <TituloPagina titulo={category.name} slug={slug} modo="oscuro" />
      <FiltrosHistoriaOral />
    </aside>

    <main class="col2">
      <h1>{category.name}</h1>

      <div class="transcripciones">
        {
          transcripcionesProcesadas.map((transcripcion) => {
            const { texto, personajes } = transcripcion;

            return (
              <div class="transcripcion">
                <div class="personajes">
                  {personajes.map((personaje: any) => {
                    const { title, slug } = personaje;
                    return (
                      <span class="personaje">
                        <a href={`${import.meta.env.BASE_URL}/personajes/${slug}`}>{title}</a>
                      </span>
                    );
                  })}
                </div>
                <div set:html={texto} />

                {/* <div class="audios">
                  {audios.edges.map((audio) => {
                    const slugAudio = audio.node.id;

                    return (
                      <audio controls>
                        <source src={`${import.meta.env.BASE_URL}/audios/${audio.}`} type="audio/mp3" />
                        Your browser does not support the audio element.
                      </audio>
                    );
                  })}
                </div> */}
              </div>
            );
          })
        }
      </div>
    </main>
  </div>
</Plantilla>

<style lang="scss">
  .paginaCategorias {
    display: flex;
  }

  .contenido {
    padding: 1em 2em 5em 2em;
  }
</style>
