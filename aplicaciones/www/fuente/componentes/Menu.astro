---
import { listaPaginas } from '@/cerebros/general';
import { base } from '@/utilidades/constantes';

const rutaActual = Astro.url.pathname;

const paginas = await listaPaginas();
---

<div id="menuPrincipal">
  <div id="apagarLuz"></div>
  <span id="botonMenu" class="fuenteIconos">8</span>

  <nav id="listaPaginas">
    {
      paginas &&
        paginas.map((pagina) => {
          const ruta = `${base}/${pagina.slug}`;

          return (
            <a
              class={`botonPagina${ruta === rutaActual ? ' actual' : ''}`}
              data-iconoa={pagina.iconoA}
              data-iconob={pagina.iconoB}
              href={`${pagina.slug !== 'inicio' ? `${ruta}` : `${base}`}`}
            >
              <span class="iconoMenu fuenteIconos">{pagina.iconoA}</span>
              <span class="nombrePagina">{pagina.title}</span>
            </a>
          );
        })
    }
  </nav>
</div>

<script>
  let menuAbierto = false;

  const botonMenu = document.querySelector<HTMLSpanElement>('#botonMenu');
  const botonesPaginas = document.querySelectorAll<HTMLLIElement>('.botonPagina');
  const contenedor = document.querySelector<HTMLElement>('#listaPaginas');
  const apagarLuz = document.querySelector<HTMLElement>('#apagarLuz');
  const menuPrincipal = document.querySelector<HTMLElement>('#menuPrincipal');
  const listaPaginas = document.querySelector<HTMLElement>('#listaPaginas');

  if (botonMenu && apagarLuz) {
    botonMenu.addEventListener('click', () => {
      menuAbierto = !menuAbierto;
      cambiarEstadosMenu();
    });

    apagarLuz.addEventListener('click', () => {
      menuAbierto = false;
      cambiarEstadosMenu();
    });

    const cambiarEstadosMenu = () => {
      if (!contenedor || !menuPrincipal || !listaPaginas) return;

      if (menuAbierto) {
        botonMenu.innerText = '0';
        contenedor.classList.add('visible');
        apagarLuz.classList.add('visible');
        menuPrincipal.classList.add('visible');
        listaPaginas.classList.add('visible');
      } else {
        botonMenu.innerText = '8';
        contenedor.classList.remove('visible');
        apagarLuz.classList.remove('visible');
        menuPrincipal.classList.remove('visible');
        listaPaginas.classList.remove('visible');
      }
    };
  }

  /** Hacemos acá los cambios de íconos para que se puedan definir en WP */
  if (botonesPaginas && botonesPaginas.length) {
    botonesPaginas.forEach((boton) => {
      const { iconoa, iconob } = boton.dataset;
      const icono = boton.querySelector<HTMLSpanElement>('.iconoMenu');

      if (icono) {
        boton.addEventListener('mouseenter', () => {
          icono.innerHTML = iconob || '2';
        });

        boton.addEventListener('mouseleave', () => {
          icono.innerHTML = iconoa || '1';
        });
      }
    });
  }
</script>

<style lang="scss">
  a,
  a:link,
  a:visited {
    color: var(--textoInvertido);

    &:hover {
      text-decoration: none;
    }
  }

  #menuPrincipal {
    position: fixed;
    top: 0;
    right: -22vw;
    z-index: 99;
    height: 100vh;
    width: 22vw;
    overflow-y: auto;
    overflow-x: hidden;
    pointer-events: auto;
    transition: all 0.45s ease-out;

    #botonMenu {
      position: fixed;
      top: 10px;
      right: 15px;
      cursor: pointer;
      z-index: 100;
      padding: 0.64em;
      opacity: 1;
    }

    &.visible {
      opacity: 1;
      color: var(--textoInvertido);
      pointer-events: auto;
      right: 0;
    }
  }

  #apagarLuz {
    position: fixed;
    width: 100vw;
    height: 100vh;
    top: 0;
    right: 0;
    background-color: rgba(211, 211, 211, 0.6);
    opacity: 0;
    z-index: -1;
    transition: opacity 0.45s ease-out;
    pointer-events: none;

    &.visible {
      opacity: 1;
      pointer-events: auto;
    }
  }

  #listaPaginas {
    display: flex;
    flex-direction: column;
    transition: transform 0.45s ease-out;
    background-color: var(--superficieOscura);
    z-index: 2;
    min-height: 100vh;
    position: relative;
    padding: 3em 3em 3em 2em;
    color: var(--textoInvertido);
    justify-content: center;
    font-size: 1.2em;

    .botonPagina {
      display: flex;
      flex-wrap: nowrap;
      align-items: center;
      margin-bottom: 0.55em;
      padding: 0.5em;

      &.actual {
        border: 1px dotted;
        background-color: var(--superficiePrimario);
        color: var(--colorTexto);
        pointer-events: none;
      }
    }

    .nombrePagina {
      margin-left: 1em;
    }
  }

  .iconoMenu {
    width: 20px;
  }
</style>
